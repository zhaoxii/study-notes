

servlet是一个接口。是javaweb三大组件之一。三大组件是：servlet程序，filter过滤器，listener监听器

监听器最早执行，然后是过滤器，然后是servlet程序


手动实现servlet程序：
1、编写一个类实现servlet接口。
2、实现service方法，处理请求，并响应数据
3、到web.xml种配置servlet程序的访问地址



<!--    servlet标签给tomcat配置servlet程序-->
<servlet>
	<servlet-name>first-servlet</servlet-name>
	<servlet-class>com.zhaoxi.servlet.test</servlet-class>
</servlet>

<!--    给servlet程序配置访问地址-->
<servlet-mapping>
	<servlet-name>first-servlet</servlet-name>
	<url-pattern>/test/helloServlet</url-pattern>   这个地址是基于http://ip:port/项目地址/ 的。 配置完可通过这个地址访问servlet程序
</servlet-mapping>




servlet生命周期

1、执行servlet构造器方法
2、执行init初始化方法
3、执行service方法
4、执行destroy销毁方法

1，2步是在第一次访问的时候，创建servlet程序会调用
3是每次请求都会调用
4是web项目停止的时候调用





开发中，都是使用继承HttpServlet类的方式去实现servlet程序
1、编写一个类继承httpservlet类
2、根据业务需要重写doGet或doPost方法
3、到web.xml种配置servlet程序的访问地址







servletconfig类从类名上来看，就是servlet程序的配置信息类。

servletconfig类的作用：
1、可以获取servlet程序的别名，就是xml中配置的servlet-name的值
2、可以获取初始化参数init-param
3、获取servletcontext对象



servlet程序和servletconfig对象都是由tomcat负责创建，我们负责使用。
servlet程序默认是第一次访问的时候创建，servletconfig是每个servlet程序创建时，就创建一个servletconfig对象

每个servlet对应一个自己的servletconfig对象，servlet之间不能相互获取servletconfig对象。






servletcontext

servletcontext是一个接口，表示servlet上下文对象。
一个web工程，只有一个servletcontext对象实例。

servletcontext是一个域对象

什么是域对象：域对象是可以像map一样存取数据的对象，叫域对象。
这里的域指的是存取数据的操作范围。整个web工程。


servletcontext是在web工程部署启动的时候创建，在web工程停止的时候销毁。



servletcontext的四个作用
1、获取web.xml中配置的上下文参数。context-param
2、获取当前的工程路径。格式：/工程名
3、获取工程部署后在服务器磁盘上的绝对路径。
4、像map一样存取数据


<!--    context-param是上下文参数，属于整个web工程-->
<context-param>
	<param-name></param-name>
	<param-value></param-value>
</context-param>





HttpServletRequest类

每次有请求过来，tomcat服务器就会把请求过来的http协议信息解析好封装在request对象中。
然后传递到service方法，doGet等方法中供我们使用。
我们可以通过这个类获取到所有的请求信息。




获取请求参数
getParameter








请求转发


getRequestDispatcher
forward 前进

请求转发的特点：
1、浏览器地址没有变
2、他们是一次请求
3、他们共享request域中的数据
4、可以转发到WEB-INF目录下(在浏览器上不能访问该目录下的文件)








文件上传下载












----------------------------------------------------------------
过滤器filter


1、继承FIlter接口
2、编写doFilter方法
3、在web.xml中配置过滤器以及路径。

public class HelloFilter implements Filter {
    @Override
    public void init(FilterConfig filterConfig) throws ServletException {

    }

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
        filterChain.doFilter(servletRequest, servletResponse);
    }

    @Override
    public void destroy() {

    }
}








































